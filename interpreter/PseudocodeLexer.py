# Generated from interpreter/Pseudocode.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,44,288,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,1,0,1,0,1,0,1,1,
        1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,
        1,4,1,4,1,4,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,
        1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,10,1,10,1,10,1,10,
        1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,
        1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,
        1,14,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,17,1,17,
        1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,
        1,24,1,25,1,25,1,26,1,26,1,26,1,27,1,27,1,28,1,28,1,28,1,29,1,29,
        1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,33,1,33,
        1,33,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,37,
        1,37,1,38,1,38,1,39,1,39,5,39,237,8,39,10,39,12,39,240,9,39,1,40,
        4,40,243,8,40,11,40,12,40,244,1,40,1,40,4,40,249,8,40,11,40,12,40,
        250,3,40,253,8,40,1,41,1,41,5,41,257,8,41,10,41,12,41,260,9,41,1,
        41,1,41,1,41,5,41,265,8,41,10,41,12,41,268,9,41,1,41,3,41,271,8,
        41,1,42,4,42,274,8,42,11,42,12,42,275,1,42,1,42,1,43,1,43,5,43,282,
        8,43,10,43,12,43,285,9,43,1,43,1,43,0,0,44,1,1,3,2,5,3,7,4,9,5,11,
        6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,
        35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,
        57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,
        79,40,81,41,83,42,85,43,87,44,1,0,7,3,0,65,90,95,95,97,122,4,0,48,
        57,65,90,95,95,97,122,1,0,48,57,3,0,10,10,13,13,34,34,3,0,10,10,
        13,13,39,39,3,0,9,10,13,13,32,32,2,0,10,10,13,13,296,0,1,1,0,0,0,
        0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,
        1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
        1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,
        1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,
        1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,
        1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,
        1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,
        1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,
        1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,1,89,1,0,0,0,3,92,1,0,0,0,5,96,
        1,0,0,0,7,98,1,0,0,0,9,106,1,0,0,0,11,112,1,0,0,0,13,114,1,0,0,0,
        15,119,1,0,0,0,17,126,1,0,0,0,19,133,1,0,0,0,21,136,1,0,0,0,23,143,
        1,0,0,0,25,151,1,0,0,0,27,155,1,0,0,0,29,160,1,0,0,0,31,167,1,0,
        0,0,33,172,1,0,0,0,35,177,1,0,0,0,37,179,1,0,0,0,39,181,1,0,0,0,
        41,183,1,0,0,0,43,185,1,0,0,0,45,187,1,0,0,0,47,189,1,0,0,0,49,191,
        1,0,0,0,51,193,1,0,0,0,53,195,1,0,0,0,55,198,1,0,0,0,57,200,1,0,
        0,0,59,203,1,0,0,0,61,205,1,0,0,0,63,208,1,0,0,0,65,212,1,0,0,0,
        67,216,1,0,0,0,69,219,1,0,0,0,71,222,1,0,0,0,73,226,1,0,0,0,75,230,
        1,0,0,0,77,232,1,0,0,0,79,234,1,0,0,0,81,242,1,0,0,0,83,270,1,0,
        0,0,85,273,1,0,0,0,87,279,1,0,0,0,89,90,5,60,0,0,90,91,5,45,0,0,
        91,2,1,0,0,0,92,93,5,60,0,0,93,94,5,45,0,0,94,95,5,62,0,0,95,4,1,
        0,0,0,96,97,5,59,0,0,97,6,1,0,0,0,98,99,5,99,0,0,99,100,5,105,0,
        0,100,101,5,116,0,0,101,102,5,101,0,0,102,103,5,115,0,0,103,104,
        5,116,0,0,104,105,5,101,0,0,105,8,1,0,0,0,106,107,5,115,0,0,107,
        108,5,99,0,0,108,109,5,114,0,0,109,110,5,105,0,0,110,111,5,101,0,
        0,111,10,1,0,0,0,112,113,5,44,0,0,113,12,1,0,0,0,114,115,5,100,0,
        0,115,116,5,97,0,0,116,117,5,99,0,0,117,118,5,97,0,0,118,14,1,0,
        0,0,119,120,5,97,0,0,120,121,5,116,0,0,121,122,5,117,0,0,122,123,
        5,110,0,0,123,124,5,99,0,0,124,125,5,105,0,0,125,16,1,0,0,0,126,
        127,5,97,0,0,127,128,5,108,0,0,128,129,5,116,0,0,129,130,5,102,0,
        0,130,131,5,101,0,0,131,132,5,108,0,0,132,18,1,0,0,0,133,134,5,115,
        0,0,134,135,5,102,0,0,135,20,1,0,0,0,136,137,5,112,0,0,137,138,5,
        101,0,0,138,139,5,110,0,0,139,140,5,116,0,0,140,141,5,114,0,0,141,
        142,5,117,0,0,142,22,1,0,0,0,143,144,5,101,0,0,144,145,5,120,0,0,
        145,146,5,101,0,0,146,147,5,99,0,0,147,148,5,117,0,0,148,149,5,116,
        0,0,149,150,5,97,0,0,150,24,1,0,0,0,151,152,5,99,0,0,152,153,5,97,
        0,0,153,154,5,116,0,0,154,26,1,0,0,0,155,156,5,116,0,0,156,157,5,
        105,0,0,157,158,5,109,0,0,158,159,5,112,0,0,159,28,1,0,0,0,160,161,
        5,114,0,0,161,162,5,101,0,0,162,163,5,112,0,0,163,164,5,101,0,0,
        164,165,5,116,0,0,165,166,5,97,0,0,166,30,1,0,0,0,167,168,5,112,
        0,0,168,169,5,97,0,0,169,170,5,110,0,0,170,171,5,97,0,0,171,32,1,
        0,0,0,172,173,5,99,0,0,173,174,5,97,0,0,174,175,5,110,0,0,175,176,
        5,100,0,0,176,34,1,0,0,0,177,178,5,42,0,0,178,36,1,0,0,0,179,180,
        5,47,0,0,180,38,1,0,0,0,181,182,5,37,0,0,182,40,1,0,0,0,183,184,
        5,91,0,0,184,42,1,0,0,0,185,186,5,93,0,0,186,44,1,0,0,0,187,188,
        5,43,0,0,188,46,1,0,0,0,189,190,5,45,0,0,190,48,1,0,0,0,191,192,
        5,8730,0,0,192,50,1,0,0,0,193,194,5,61,0,0,194,52,1,0,0,0,195,196,
        5,33,0,0,196,197,5,61,0,0,197,54,1,0,0,0,198,199,5,60,0,0,199,56,
        1,0,0,0,200,201,5,60,0,0,201,202,5,61,0,0,202,58,1,0,0,0,203,204,
        5,62,0,0,204,60,1,0,0,0,205,206,5,62,0,0,206,207,5,61,0,0,207,62,
        1,0,0,0,208,209,5,83,0,0,209,210,5,65,0,0,210,211,5,85,0,0,211,64,
        1,0,0,0,212,213,5,115,0,0,213,214,5,97,0,0,214,215,5,117,0,0,215,
        66,1,0,0,0,216,217,5,83,0,0,217,218,5,73,0,0,218,68,1,0,0,0,219,
        220,5,115,0,0,220,221,5,105,0,0,221,70,1,0,0,0,222,223,5,78,0,0,
        223,224,5,79,0,0,224,225,5,84,0,0,225,72,1,0,0,0,226,227,5,110,0,
        0,227,228,5,111,0,0,228,229,5,116,0,0,229,74,1,0,0,0,230,231,5,40,
        0,0,231,76,1,0,0,0,232,233,5,41,0,0,233,78,1,0,0,0,234,238,7,0,0,
        0,235,237,7,1,0,0,236,235,1,0,0,0,237,240,1,0,0,0,238,236,1,0,0,
        0,238,239,1,0,0,0,239,80,1,0,0,0,240,238,1,0,0,0,241,243,7,2,0,0,
        242,241,1,0,0,0,243,244,1,0,0,0,244,242,1,0,0,0,244,245,1,0,0,0,
        245,252,1,0,0,0,246,248,5,46,0,0,247,249,7,2,0,0,248,247,1,0,0,0,
        249,250,1,0,0,0,250,248,1,0,0,0,250,251,1,0,0,0,251,253,1,0,0,0,
        252,246,1,0,0,0,252,253,1,0,0,0,253,82,1,0,0,0,254,258,5,34,0,0,
        255,257,8,3,0,0,256,255,1,0,0,0,257,260,1,0,0,0,258,256,1,0,0,0,
        258,259,1,0,0,0,259,261,1,0,0,0,260,258,1,0,0,0,261,271,5,34,0,0,
        262,266,5,39,0,0,263,265,8,4,0,0,264,263,1,0,0,0,265,268,1,0,0,0,
        266,264,1,0,0,0,266,267,1,0,0,0,267,269,1,0,0,0,268,266,1,0,0,0,
        269,271,5,39,0,0,270,254,1,0,0,0,270,262,1,0,0,0,271,84,1,0,0,0,
        272,274,7,5,0,0,273,272,1,0,0,0,274,275,1,0,0,0,275,273,1,0,0,0,
        275,276,1,0,0,0,276,277,1,0,0,0,277,278,6,42,0,0,278,86,1,0,0,0,
        279,283,5,35,0,0,280,282,8,6,0,0,281,280,1,0,0,0,282,285,1,0,0,0,
        283,281,1,0,0,0,283,284,1,0,0,0,284,286,1,0,0,0,285,283,1,0,0,0,
        286,287,6,43,0,0,287,88,1,0,0,0,10,0,238,244,250,252,258,266,270,
        275,283,1,6,0,0
    ]

class PseudocodeLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    NAME = 40
    NUMBER = 41
    STRING = 42
    WS = 43
    COMMENT = 44

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'<-'", "'<->'", "';'", "'citeste'", "'scrie'", "','", "'daca'", 
            "'atunci'", "'altfel'", "'sf'", "'pentru'", "'executa'", "'cat'", 
            "'timp'", "'repeta'", "'pana'", "'cand'", "'*'", "'/'", "'%'", 
            "'['", "']'", "'+'", "'-'", "'\\u221A'", "'='", "'!='", "'<'", 
            "'<='", "'>'", "'>='", "'SAU'", "'sau'", "'SI'", "'si'", "'NOT'", 
            "'not'", "'('", "')'" ]

    symbolicNames = [ "<INVALID>",
            "NAME", "NUMBER", "STRING", "WS", "COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "NAME", "NUMBER", "STRING", "WS", "COMMENT" ]

    grammarFileName = "Pseudocode.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


